{"version":3,"sources":["theme.ts","components/DataContext/DataContext.js","components/QRCode/WalletQR.tsx","components/Connector/Connector.tsx","components/Navbar/Navbar.tsx","pages/Home/Home.tsx","components/Table/Table.js","config.ts","utils/contract.ts","utils/hooks.ts","utils/getter.ts","pages/Tourist/Tourist.tsx","pages/Shop/CreateOrder.tsx","pages/Shop/CancelOrder.tsx","pages/Shop/SearchShop.tsx","pages/Shop/Shop.tsx","pages/Government/ApproveOrder.tsx","pages/Government/ConfirmOrder.tsx","pages/Government/RejectOrder.tsx","pages/Government/SearchBuyer.tsx","pages/Government/CreateShop.tsx","pages/Government/Government.tsx","routes.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","DataContext","createContext","DataProvider","children","useState","isAdmin","setIsAdmin","isShop","setIsShop","Provider","value","WalletQR","isOpen","onClose","account","useEthers","py","Connector","activateBrowserWallet","useDisclosure","defaultIsOpen","onOpen","onClick","colorScheme","leftIcon","icon","faWallet","slice","NavBar","data","useContext","h","p","base","lg","my","align","alignContent","ml","to","spacing","pr","display","md","HomePage","minWidth","bg","Table","props","classes","makeStyles","root","fontSize","className","style","width","margin","title","columns","options","search","paging","filtering","exportButton","pageSize","pageSizeOptions","headerStyle","backgroundColor","color","padding","rowStyle","readOnlyUrls","ChainId","Mainnet","readOnlyChainId","multicallAddresses","Localhost","pollingInterval","MAIN_CONTRACT_ADDRESS","MainContractInterface","utils","Interface","MainContractABI","abi","MainContract","Contract","useAdmin","address","useContractCall","method","args","undefined","useShop","useOrder","useContractMethod","methodName","useContractFunction","state","send","STATES","_govTransformer","order","id","country","shop","buyer","itemName","name","shopName","buyerName","status","itemAmount","amount","toNumber","itemPrice","parseFloat","formatEther","price","itemTotal","mul","TouristPage","claimRefundState","claimRefund","orders","countries","Set","map","x","refund","useRefundAmount","allOrders","_ordersSum","filter","reduce","sum","maxW","wrap","direction","w","alignItems","mx","px","borderRadius","textAlign","fontWeight","pl","_isBigNumber","errorMessage","isLoading","field","type","CreateOrder","buyerAddress","setBuyerAddress","productId","setProductId","setItemPrice","setItemAmount","as","paddingTop","paddingBottom","placeholder","_placeholder","size","variant","onChange","e","target","parseEther","CancelOrder","tableColumns","SearchShop","__orders","useOrderByShop","ShopPage","ApproveOrder","ConfirmOrder","RejectOrder","SearchBuyer","ref","useRef","current","CreateShop","createShopState","createShop","setCountry","setShopName","shopAddress","setShopAddress","m","GovernmentPage","AppRouter","path","element","Home","Tourist","Shop","Government","App","ReactDOM","render","StrictMode","DAppProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4411f44a.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst config = {\r\n  initialColorMode: 'dark',\r\n  useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\nexport default theme","import { createContext, useState } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [isShop, setIsShop] = useState(true);\r\n\r\n    return (\r\n        <DataContext.Provider\r\n        value={{\r\n            isAdmin,\r\n            isShop,\r\n            setIsAdmin,\r\n            setIsShop\r\n        }}\r\n        >\r\n        {children}\r\n        </DataContext.Provider>\r\n    );\r\n};","import {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Center,\r\n} from \"@chakra-ui/react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nfunction WalletQR({ isOpen, onClose }: any) {\r\n    const { account } = useEthers();\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay />\r\n            <ModalContent py=\"4\">\r\n                <ModalHeader>Your QR Code</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <Center>\r\n                        <QRCode value={account ?? \"\"} />\r\n                    </Center>\r\n                </ModalBody>\r\n            </ModalContent>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default WalletQR;\r\n","import { Button, useDisclosure } from \"@chakra-ui/react\";\r\nimport { useEthers } from '@usedapp/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWallet } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport WalletQR from \"../QRCode/WalletQR\";\r\n\r\nfunction Connector(){\r\n    const { activateBrowserWallet, account } = useEthers()\r\n    const { isOpen, onOpen, onClose } = useDisclosure({defaultIsOpen:false})\r\n\r\n    if (!account)\r\n        return ( \r\n        <Button \r\n            onClick={()=>activateBrowserWallet()}\r\n            colorScheme='blue'\r\n            leftIcon={<FontAwesomeIcon icon={faWallet}/>}\r\n        > \r\n            Connect to Wallet\r\n        </Button>\r\n        );\r\n    else\r\n        return (\r\n        <>\r\n        <Button \r\n            onClick={onOpen}\r\n            colorScheme='blue'\r\n            leftIcon={<FontAwesomeIcon icon={faWallet}/>}\r\n        > \r\n            { account?.slice(0,6)+'..'+account?.slice(-4) }\r\n        </Button>\r\n        <WalletQR isOpen={isOpen} onClose={onClose} />\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Connector;","import { useContext } from \"react\";\r\nimport { Flex, Box, Heading, Spacer, HStack } from \"@chakra-ui/react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { DataContext } from \"../../components/DataContext/DataContext\";\r\n\r\nimport Connector from \"../Connector/Connector\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n    const { account } = useEthers();\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <Flex\r\n            h=\"64px\"\r\n            p={{ base: \"2\", lg: \"5\" }}\r\n            my=\"1rem\"\r\n            align=\"center\"\r\n            alignContent=\"space-between\"\r\n        >\r\n            <Box ml=\"5\">\r\n                <Heading>\r\n                    <Link to=\"/\"> VAT Refund via Blockchain </Link>\r\n                </Heading>\r\n            </Box>\r\n            <Spacer />\r\n            <HStack p=\"4\">\r\n                <HStack\r\n                    spacing=\"2rem\"\r\n                    pr=\"2rem\"\r\n                    display={{ base: \"none\", md: \"inline\" }}\r\n                >\r\n                    {(() => {\r\n                        if (data.isAdmin) {\r\n                            return <Link to=\"/government\">Government</Link>;\r\n                        } else if (data.isShop) {\r\n                            return <Link to=\"/shop\">Shop</Link>;\r\n                        } else if (!account) {\r\n                            return <></>;\r\n                        } else {\r\n                            return <Link to=\"/tourist\">Tourist</Link>;\r\n                        }\r\n                    })()}\r\n                </HStack>\r\n                <Connector />\r\n            </HStack>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Container } from \"@chakra-ui/react\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nfunction HomePage() {\r\n    return (\r\n        <Container\r\n            minWidth={{ base: \"100vw\", lg: \"80vw\" }}\r\n            h=\"calc(100vh - 64px - 3rem)\"\r\n            bg=\"gray\"\r\n        >\r\n            <Navigate to=\"/tourist\" />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import MaterialTable from \"material-table\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Table(props) {\r\n  const classes = makeStyles({\r\n    root: {\r\n      fontSize: 16,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      className={classes.root}\r\n      style={{ width: '95%', margin: '2rem' }}\r\n      title={props.title}\r\n      data={props.data}\r\n      columns={props.columns}\r\n      options={{\r\n        search: true,\r\n        paging: true,\r\n        filtering: true,\r\n        exportButton: false,\r\n        pageSize: 8,\r\n        pageSizeOptions: [8, 16, 24],\r\n        headerStyle: { backgroundColor: '#90cdf4', color: '#1a202c', fontSize: 16, padding: \"16px 16px\" },\r\n        rowStyle: { fontSize: 14 }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Table;","import { ChainId, Config } from '@usedapp/core';\r\n\r\nexport const config: Config = {\r\n    readOnlyUrls: { [ChainId.Mainnet]: \"https://mainnet.infura.io/v3/3165a249c65f4198bf57200109b8fadf\" },\r\n    readOnlyChainId: ChainId.Mainnet,\r\n    multicallAddresses: { [ChainId.Localhost]: \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\" },\r\n    pollingInterval: 1,\r\n};\r\n\r\nexport const MAIN_CONTRACT_ADDRESS: string = `0x5FbDB2315678afecb367f032d93F642f64180aa3`;","import { utils } from 'ethers';\r\nimport { Contract } from '@ethersproject/contracts';\r\n\r\nimport MainContractABI from '../abi/main_contract.abi.json';\r\nimport { MAIN_CONTRACT_ADDRESS } from '../config';\r\n\r\nexport const MainContractInterface = new utils.Interface(MainContractABI.abi);\r\n\r\nexport const MainContract = new Contract(MAIN_CONTRACT_ADDRESS, MainContractInterface);","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { useContractCall, useContractFunction, useEthers } from \"@usedapp/core\";\r\nimport { Falsy } from \"@usedapp/core/dist/esm/src/model/types\";\r\nimport { MainContractInterface, MainContract } from \"./contract\";\r\nimport { MAIN_CONTRACT_ADDRESS } from '../config';\r\nimport { useContext } from 'react';\r\nimport { DataContext } from '../components/DataContext/DataContext';\r\n\r\nexport function useAdmin(address: string | Falsy): boolean | undefined {\r\n  const data = useContext(DataContext);\r\n  const [isAdmin] =\r\n    useContractCall(\r\n      address && {\r\n        abi: MainContractInterface,\r\n        address: MAIN_CONTRACT_ADDRESS,\r\n        method: 'isAdmin',\r\n        args: [address],\r\n      }\r\n    ) ?? [];\r\n  if (isAdmin !== undefined) {\r\n    data.setIsAdmin(isAdmin);\r\n  } else {\r\n    data.setIsAdmin(false);\r\n  }\r\n  return isAdmin;\r\n}\r\n\r\nexport function useShop(address: string | Falsy): boolean | undefined {\r\n  const data = useContext(DataContext);\r\n  const [isShop] =\r\n    useContractCall(\r\n      address && {\r\n        abi: MainContractInterface,\r\n        address: MAIN_CONTRACT_ADDRESS,\r\n        method: 'isShop',\r\n        args: [address],\r\n      }\r\n    ) ?? [];\r\n  if (isShop !== undefined) {\r\n    data.setIsShop(isShop);\r\n  } else {\r\n    data.setIsShop(false);\r\n  }\r\n  return isShop;\r\n}\r\n\r\nexport function useOrder(address?: string | Falsy) {\r\n  const { account } = useEthers();\r\n  address = address || account;\r\n  const orderList = useContractCall(\r\n    address && {\r\n      abi: MainContractInterface,\r\n      address: MAIN_CONTRACT_ADDRESS,\r\n      method: 'getAllOrdersByBuyer',\r\n      args: [address],\r\n    }\r\n  ) ?? [];\r\n  return orderList[0];\r\n}\r\n\r\nexport function useOrderByShop(address?: string | Falsy) {\r\n  const { account } = useEthers();\r\n  address = address || account;\r\n  const orderList = useContractCall(\r\n    address && {\r\n      abi: MainContractInterface,\r\n      address: MAIN_CONTRACT_ADDRESS,\r\n      method: 'getAllOrdersByShop',\r\n      args: [address],\r\n    }\r\n  ) ?? [];\r\n  return orderList[0];\r\n}\r\n\r\nexport function useRefundAmount(address: string | Falsy, country: string[] | Falsy): BigNumber | undefined {\r\n  const [refundAmount] = useContractCall(\r\n    address && {\r\n      abi: MainContractInterface,\r\n      address: MAIN_CONTRACT_ADDRESS,\r\n      method: 'getRefundAmount',\r\n      args: [address, country],\r\n    }\r\n  ) ?? [];\r\n  return refundAmount;\r\n}\r\n\r\nexport function useContractMethod(methodName: string) {\r\n  const { state, send } = useContractFunction(MainContract, methodName, {});\r\n  return { state, send };\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { utils } from 'ethers';\r\n// id: \"0x4a1512f578cce3a45704783dc21128c0\"\r\n// name: \"222\"\r\n// amount: Object { _hex: \"0x16\", _isBigNumber: true }\r\n// price: Object { _hex: \"0x014d\", _isBigNumber: true }\r\n// ​​shop: \r\n//     country: \"TH\"\r\n// ​​​    exists: true\r\n// ​​​    length: 4\r\n//     shopAddr: \"0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199\"\r\n// ​​​    shopName: \"kuay\"\r\n// state: 0\r\n\r\nexport const STATES = [\r\n    'PENDING', \r\n    'CANCELLED' ,\r\n    'APPROVED'  , \r\n    'CONFIRMED' ,\r\n    'REJECTED'  ,\r\n    'REFUNDED'  ,\r\n]\r\n\r\n// OUTPUT country, itemName, amount, price, total, status\r\nexport const _orderTransformer = (order:Order):OrderView => {\r\n    return { \r\n        country:  order.shop.country,\r\n        itemName: order.name,\r\n        shopName: order.shop.shopName,\r\n        status:   STATES[order.state],\r\n        itemAmount: order.amount.toNumber(),\r\n        itemPrice:  parseFloat(utils.formatEther(order.price)),\r\n        itemTotal:  parseFloat(utils.formatEther(order.amount.mul(order.price))),\r\n    }\r\n}\r\nexport const _govTransformer = (order:any) => { \r\n    return { \r\n        id: order.id,\r\n        country:  order.shop.country,\r\n        buyer: order.buyer,\r\n        itemName: order.name,\r\n        shopName: order.shop.shopName,\r\n        buyerName: order.buyerName,\r\n        status:   STATES[order.state],\r\n        itemAmount: order.amount.toNumber(),\r\n        itemPrice:  parseFloat(utils.formatEther(order.price)),\r\n        itemTotal:  parseFloat(utils.formatEther(order.amount.mul(order.price))),\r\n    }\r\n}\r\n\r\nexport const OrderState = [\r\n    \"PENDING\",\r\n    \"CANCELLED\",\r\n    \"REJECTED\",\r\n    \"APPROVED\",\r\n    \"CONFIRMED\",\r\n    \"REFUNDED\"\r\n]\r\n\r\n\r\nexport interface OrderView{ \r\n    country: string; \r\n    itemName: string; \r\n    shopName: string;\r\n    status: string; \r\n    // To be changed to big number\r\n    itemAmount: number; \r\n    itemPrice: number;\r\n    itemTotal: number; \r\n}\r\n\r\nexport interface Order { \r\n    id: string; \r\n    name: string; \r\n    buyerName: string; \r\n    amount: BigNumber;\r\n    price: BigNumber;\r\n    shop: Shop; \r\n    state: number;\r\n    1?:any; 2?:any; 3?:any; 4?:any; 5?:any; 6?:any; 7?:any; 8?:any; \r\n}\r\n\r\nexport interface Shop { \r\n    country: string; \r\n    exists: boolean; \r\n    length: number; \r\n    shopAddr: string; \r\n    shopName: string;\r\n    1?:any; 2?:any; 3?:any; 4?:any; 5?:any; 6?:any; 7?:any; 8?:any; \r\n}","import { useContext } from \"react\";\r\nimport { Container, Flex, Spacer, Text, Button } from \"@chakra-ui/react\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport {\r\n    useContractMethod,\r\n    useOrder,\r\n    useRefundAmount,\r\n} from \"../../utils/hooks\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { Order, OrderView, _orderTransformer } from \"../../utils/getter\";\r\nimport { utils } from \"ethers\";\r\nimport { useAdmin, useShop } from \"../../utils/hooks\";\r\nimport { DataContext } from \"../../components/DataContext/DataContext\";\r\n\r\nfunction TouristPage() {\r\n    const data = useContext(DataContext);\r\n\r\n    const { state: claimRefundState, send: claimRefund } =\r\n        useContractMethod(\"refund\");\r\n\r\n    const { account } = useEthers();\r\n    useAdmin(account);\r\n    useShop(account);\r\n\r\n    const orders = useOrder();\r\n\r\n    const countries = [\r\n        ...new Set(orders?.map((x: Order) => x.shop.country)),\r\n    ] as string[];\r\n\r\n    // Todo: add more countries\r\n    const refund = useRefundAmount(account, countries);\r\n    const handleClaimRefund = () => claimRefund(countries);\r\n\r\n    // All Table Definitions\r\n    const tableColumns = [\r\n        { title: \"Country\", field: \"country\" },\r\n        { title: \"Name\", field: \"itemName\" },\r\n        { title: \"Shop\", field: \"shopName\" },\r\n        {\r\n            title: \"Amount\",\r\n            field: \"itemAmount\",\r\n            type: \"numeric\",\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            field: \"itemPrice\",\r\n            type: \"numeric\",\r\n            filtering: false,\r\n        },\r\n        {\r\n            title: \"Total\",\r\n            field: \"itemTotal\",\r\n            type: \"numeric\",\r\n            filtering: false,\r\n        },\r\n        { title: \"Status\", field: \"status\", type: \"numeric\" },\r\n    ];\r\n\r\n    const allOrders = orders?.map((x: Order) => _orderTransformer(x));\r\n    const _ordersSum = allOrders\r\n        ?.filter((x: OrderView) => x.status !== \"REFUNDED\")\r\n        .map((x: OrderView) => x.itemTotal)\r\n        .reduce((x: number, sum: number) => x + sum, 0);\r\n    // const _ordersSum = 0;\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" h=\"calc(100vh - 64px - 3rem)\">\r\n            {!data.isShop && !data.isAdmin ? (\r\n                <>\r\n                    <Flex wrap=\"wrap-reverse\" direction=\"row\">\r\n                        <Flex w=\"100%\" direction=\"column\">\r\n                            <Flex\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                mx=\"3rem\"\r\n                                p=\"3\"\r\n                                px=\"3rem\"\r\n                                bg=\"blackAlpha.400\"\r\n                                borderRadius=\"10px\"\r\n                            >\r\n                                <Flex direction=\"column\" textAlign=\"left\">\r\n                                    <Text fontSize=\"1.25rem\">\r\n                                        Pending Orders\r\n                                    </Text>\r\n                                    <Text fontSize=\"1.75rem\" fontWeight=\"bold\">\r\n                                        {_ordersSum} ETH\r\n                                    </Text>\r\n                                </Flex>\r\n                                <Spacer />\r\n                                <Flex direction=\"row\" alignItems=\"center\">\r\n                                    <Flex\r\n                                        direction=\"column\"\r\n                                        textAlign=\"right\"\r\n                                        color=\"teal.100\"\r\n                                        pl=\"5rem\"\r\n                                    >\r\n                                        <Text fontSize=\"1.25rem\">\r\n                                            Total Refundable Amount\r\n                                        </Text>\r\n                                        <Text\r\n                                            fontSize=\"1.75rem\"\r\n                                            fontWeight=\"bold\"\r\n                                        >\r\n                                            {refund?._isBigNumber\r\n                                                ? utils.formatEther(refund)\r\n                                                : \"Loading..\"}{\" \"}\r\n                                            ETH\r\n                                        </Text>\r\n                                        <Text\r\n                                            fontSize=\"0.75rem\"\r\n                                            color=\"red.300\"\r\n                                        >\r\n                                            {claimRefundState.errorMessage}\r\n                                        </Text>\r\n                                    </Flex>\r\n                                    <Button\r\n                                        ml=\"6\"\r\n                                        px=\"5\"\r\n                                        colorScheme=\"teal\"\r\n                                        onClick={() => handleClaimRefund()}\r\n                                        isLoading={\r\n                                            claimRefundState.status === \"Mining\"\r\n                                        }\r\n                                    >\r\n                                        Claim\r\n                                    </Button>\r\n                                </Flex>\r\n                            </Flex>\r\n                            <Flex mx=\"3rem\">\r\n                                <Table\r\n                                    title=\"All Order\"\r\n                                    data={allOrders}\r\n                                    columns={tableColumns}\r\n                                />\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Flex>\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TouristPage;\r\n","import { useState } from \"react\";\r\nimport { Input, Button, Text, VStack } from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\nimport { utils } from \"ethers\";\r\n\r\nfunction CreateOrder() {\r\n    const { state, send } = useContractMethod(\"createOrder\");\r\n\r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n    const [productId, setProductId] = useState(\"\");\r\n    const [itemPrice, setItemPrice] = useState(\"\");\r\n    const [itemAmount, setItemAmount] = useState(\"\");\r\n\r\n    const handleCreateOrder = () =>\r\n        send(buyerAddress, productId, utils.parseEther(itemPrice), itemAmount);\r\n\r\n    return (\r\n        <VStack w=\"full\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\" h=\"25rem\">\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Create Order\r\n            </Text>\r\n            <VStack spacing=\"3\">\r\n                <Input\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={buyerAddress}\r\n                    onChange={(e) => setBuyerAddress(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Product Name\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={productId}\r\n                    onChange={(e) => setProductId(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Price (Ether)\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={itemPrice}\r\n                    onChange={(e) => setItemPrice(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Amount\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={itemAmount}\r\n                    onChange={(e) => setItemAmount(e.target.value)}\r\n                />\r\n            </VStack>\r\n            <VStack p=\"2\">\r\n                <Button onClick={handleCreateOrder} bg=\"#1a202c\">\r\n                    Create Order\r\n                </Button>\r\n                <Text color=\"black\">TX Status: {state.status}</Text>\r\n                <Text color=\"red\">{state.errorMessage}</Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default CreateOrder;\r\n","import { useState } from \"react\";\r\nimport { Input, Button, Text, VStack } from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\n\r\nfunction CancelOrder() {\r\n    const { state, send } = useContractMethod(\"cancelOrder\");\r\n\r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n    const [productId, setProductId] = useState(\"\");\r\n\r\n    const handleRejectOrder = () => send(buyerAddress, productId);\r\n\r\n    return (\r\n        <VStack w=\"full\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\" h=\"25rem\">\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Cancel Order\r\n            </Text>\r\n            <VStack spacing=\"3\">\r\n                <Input\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={buyerAddress}\r\n                    onChange={(e) => setBuyerAddress(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Product Reference ID\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={productId}\r\n                    onChange={(e) => setProductId(e.target.value)}\r\n                />\r\n            </VStack>\r\n            <VStack p=\"2\">\r\n                <Button onClick={handleRejectOrder} bg=\"#1a202c\">\r\n                    Cancel Order\r\n                </Button>\r\n                <Text color=\"black\">TX Status: {state.status}</Text>\r\n                <Text color=\"red\">{state.errorMessage}</Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default CancelOrder;\r\n","import { VStack, HStack } from \"@chakra-ui/react\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport { useOrderByShop } from \"../../utils/hooks\";\r\nimport { _govTransformer } from \"../../utils/getter\";\r\n\r\nconst tableColumns = [\r\n    { title: \"TxID\", field: \"id\" },\r\n    { title: \"Buyer\", field: \"buyer\" },\r\n    { title: \"Name\", field: \"itemName\" },\r\n    { title: \"Country\", field: \"country\" },\r\n    { title: \"Amount\", field: \"itemAmount\", type: \"numeric\" },\r\n    { title: \"Price\", field: \"itemPrice\", type: \"numeric\" },\r\n    { title: \"Total\", field: \"itemTotal\", type: \"numeric\" },\r\n    { title: \"Status\", field: \"status\", type: \"numeric\" },\r\n];\r\n\r\nfunction SearchShop() {\r\n    const __orders = useOrderByShop();\r\n    const orders = __orders?.map((x: any) => _govTransformer(x));\r\n\r\n    return (\r\n        <VStack w=\"full\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\">\r\n            <HStack w=\"full\">\r\n                <Table title=\"Order\" data={orders} columns={tableColumns} />\r\n            </HStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default SearchShop;\r\n","import { useContext } from \"react\";\r\nimport { Container, HStack } from \"@chakra-ui/react\";\r\nimport CreateOrder from \"./CreateOrder\";\r\nimport CancelOrder from \"./CancelOrder\";\r\nimport SearchShop from \"./SearchShop\";\r\nimport { useAdmin, useShop } from \"../../utils/hooks\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { DataContext } from \"../../components/DataContext/DataContext\";\r\n\r\nfunction ShopPage() {\r\n    const { account } = useEthers();\r\n    useAdmin(account);\r\n    useShop(account);\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" h=\"calc(100vh - 64px - 3rem)\">\r\n            {data.isShop ? (\r\n                <>\r\n                    <HStack w=\"full\" align=\"baseline\">\r\n                        <CreateOrder />\r\n                        <CancelOrder />\r\n                    </HStack>\r\n                    <HStack w=\"full\">\r\n                        <SearchShop />\r\n                    </HStack>\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ShopPage;\r\n","import { useState } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Text,\r\n    VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\n\r\nfunction ApproveOrder() {\r\n    const { state, send }   = useContractMethod(\"approveOrder\");\r\n    \r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n    const [productId, setProductId] = useState(\"\");\r\n  \r\n    const handleApproveOrder = () => send(buyerAddress, productId)\r\n\r\n    return (\r\n        <VStack w='full' bg='whitesmoke' my='1' borderRadius='10px'>\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Approve Order\r\n            </Text>\r\n            <VStack spacing='3' >\r\n                <Input\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={buyerAddress}\r\n                    onChange={(e)=>setBuyerAddress(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Product Reference ID\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={productId}\r\n                    onChange={(e)=>setProductId(e.target.value)}\r\n                />\r\n            </VStack>\r\n            <VStack p='2'>\r\n                <Button onClick={handleApproveOrder} bg=\"#1a202c\">\r\n                    Approve Order\r\n                </Button>\r\n                <Text color='black'> \r\n                    TX Status: { state.status }\r\n                </Text>\r\n                <Text color='red'> \r\n                    { state.errorMessage } \r\n                </Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default ApproveOrder;\r\n","import { useState } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Text,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\n\r\nfunction ConfirmOrder() {\r\n    const { state, send }   = useContractMethod(\"confirmOrder\");\r\n    \r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n    const [productId, setProductId] = useState(\"\");\r\n\r\n    \r\n    const handleConfirmOrder = () => send(buyerAddress, productId)\r\n\r\n    return (\r\n        <VStack w='full' bg='whitesmoke' my='1' borderRadius='10px'>\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Confirm Order\r\n            </Text>\r\n            <VStack spacing='3' >\r\n                <Input\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={buyerAddress}\r\n                    onChange={(e)=>setBuyerAddress(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Product Reference ID\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={productId}\r\n                    onChange={(e)=>setProductId(e.target.value)}\r\n                />\r\n            </VStack>\r\n            <VStack p='2'>\r\n                <Button onClick={handleConfirmOrder} bg=\"#1a202c\">\r\n                    Confirm Order\r\n                </Button>\r\n                <Text color='black'> \r\n                    TX Status: { state.status }\r\n                </Text>\r\n                <Text color='red'> \r\n                    { state.errorMessage } \r\n                </Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default ConfirmOrder;\r\n","import { useState } from \"react\";\r\nimport { Input, Button, Text, VStack } from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\n\r\nfunction RejectOrder() {\r\n    const { state, send } = useContractMethod(\"rejectOrder\");\r\n\r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n    const [productId, setProductId] = useState(\"\");\r\n\r\n    const handleRejectOrder = () => send(buyerAddress, productId);\r\n\r\n    return (\r\n        <VStack w=\"full\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\">\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Reject Order\r\n            </Text>\r\n            <VStack spacing=\"3\">\r\n                <Input\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={buyerAddress}\r\n                    onChange={(e) => setBuyerAddress(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder=\"Product Reference ID\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={productId}\r\n                    onChange={(e) => setProductId(e.target.value)}\r\n                />\r\n            </VStack>\r\n            <VStack p=\"2\">\r\n                <Button onClick={handleRejectOrder} bg=\"#1a202c\">\r\n                    Reject Order\r\n                </Button>\r\n                <Text color=\"black\">TX Status: {state.status}</Text>\r\n                <Text color=\"red\">{state.errorMessage}</Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default RejectOrder;\r\n","import { useRef, useState } from \"react\";\r\nimport { Input, Button, Text, VStack, HStack } from \"@chakra-ui/react\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport { useOrder } from \"../../utils/hooks\";\r\nimport { _govTransformer } from \"../../utils/getter\";\r\n\r\nconst tableColumns = [\r\n    { title: \"TxID\", field: \"id\" },\r\n    { title: \"Country\", field: \"country\" },\r\n    { title: \"Name\", field: \"itemName\" },\r\n    { title: \"Shop\", field: \"shopName\" },\r\n    { title: \"Amount\", field: \"itemAmount\", type: \"numeric\", filtering: false },\r\n    { title: \"Price\", field: \"itemPrice\", type: \"numeric\", filtering: false },\r\n    { title: \"Total\", field: \"itemTotal\", type: \"numeric\", filtering: false },\r\n    { title: \"Status\", field: \"status\", type: \"numeric\" },\r\n];\r\n\r\nfunction SearchBuyer() {\r\n    const ref = useRef<HTMLInputElement>(null);\r\n    const [buyerAddress, setBuyerAddress] = useState(\"\");\r\n\r\n    const __orders = useOrder(buyerAddress === \"\" ? undefined : buyerAddress);\r\n    const orders = __orders?.map((x: any) => _govTransformer(x));\r\n\r\n    const handleSearchBuyer = () => setBuyerAddress(ref.current?.value || \"\");\r\n\r\n    return (\r\n        <VStack w=\"full\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\">\r\n            <Text\r\n                fontSize=\"28px\"\r\n                as=\"b\"\r\n                paddingTop=\"27px\"\r\n                paddingBottom=\"9px\"\r\n                color=\"#1a202c\"\r\n            >\r\n                Search Buyer\r\n            </Text>\r\n            <HStack w=\"50%\" bg=\"whitesmoke\" my=\"1\" borderRadius=\"10px\">\r\n                <Input\r\n                    ref={ref}\r\n                    placeholder=\"Buyer Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                />\r\n                <Button onClick={handleSearchBuyer} bg=\"#1a202c\">\r\n                    Search Buyer\r\n                </Button>\r\n            </HStack>\r\n            <HStack w=\"full\">\r\n                <Table title=\"Order\" data={orders} columns={tableColumns} />\r\n            </HStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default SearchBuyer;\r\n","import { useState } from \"react\";\r\nimport { Stack, Input, Button, Center, Text, VStack } from \"@chakra-ui/react\";\r\nimport { useContractMethod } from \"../../utils/hooks\";\r\n\r\nfunction CreateShop() {\r\n    const { state: createShopState, send: createShop } =\r\n        useContractMethod(\"createShop\");\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [shopName, setShopName] = useState(\"\");\r\n    const [shopAddress, setShopAddress] = useState(\"\");\r\n\r\n    const handleCreateShop = () => createShop(shopAddress, shopName, country);\r\n\r\n    return (\r\n        <VStack\r\n            w=\"full\"\r\n            m=\"4\"\r\n            bg=\"white\"\r\n            paddingBottom=\"45px\"\r\n            borderRadius=\"10px\"\r\n        >\r\n            <Center>\r\n                <Text\r\n                    fontSize=\"28px\"\r\n                    as=\"b\"\r\n                    paddingTop=\"27px\"\r\n                    paddingBottom=\"18px\"\r\n                    color=\"#1a202c\"\r\n                >\r\n                    Create Shop\r\n                </Text>\r\n            </Center>\r\n            <Stack spacing={3}>\r\n                <Input\r\n                    onChange={(e) => setShopAddress(e.target.value)}\r\n                    placeholder=\"Shop Address\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={shopAddress}\r\n                />\r\n                <Input\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    placeholder=\"Country\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={country}\r\n                />\r\n                <Input\r\n                    onChange={(e) => setShopName(e.target.value)}\r\n                    placeholder=\"Shop Name\"\r\n                    _placeholder={{ color: \"#1a202c\" }}\r\n                    size=\"md\"\r\n                    variant=\"filled\"\r\n                    bg=\"#90cdf4\"\r\n                    color=\"#1a202c\"\r\n                    value={shopName}\r\n                />\r\n            </Stack>\r\n\r\n            <VStack>\r\n                <Button onClick={handleCreateShop} bg=\"#1a202c\">\r\n                    Create Shop\r\n                </Button>\r\n                <Text color=\"black\">{createShopState.status}</Text>\r\n                <Text color=\"red\">{createShopState.errorMessage}</Text>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default CreateShop;\r\n","import { useContext } from \"react\";\r\nimport { Container, HStack } from \"@chakra-ui/react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { useAdmin, useShop } from \"../../utils/hooks\";\r\nimport ApproveOrder from \"./ApproveOrder\";\r\nimport ConfirmOrder from \"./ConfirmOrder\";\r\nimport RejectOrder from \"./RejectOrder\";\r\nimport SearchBuyer from \"./SearchBuyer\";\r\nimport CreateShop from \"./CreateShop\";\r\nimport { DataContext } from \"../../components/DataContext/DataContext\";\r\n\r\nfunction GovernmentPage() {\r\n    const { account } = useEthers();\r\n    useAdmin(account);\r\n    useShop(account);\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" h=\"calc(100vh - 64px - 3rem)\">\r\n            {data.isAdmin ? (\r\n                <>\r\n                    <HStack w=\"full\">\r\n                        <CreateShop />\r\n                    </HStack>\r\n                    <HStack w=\"full\">\r\n                        <ApproveOrder />\r\n                        <RejectOrder />\r\n                        <ConfirmOrder />\r\n                    </HStack>\r\n                    <SearchBuyer />\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default GovernmentPage;\r\n","import React from 'react';\r\nimport {\r\n    Routes,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport HomePage from './pages/Home/Home';\r\nimport TouristPage from './pages/Tourist/Tourist';\r\nimport ShopPage from './pages/Shop/Shop';\r\nimport GovernmentPage from './pages/Government/Government';\r\n\r\nfunction AppRouter() {\r\n  return (\r\n    <Routes>\r\n        <Route path='/'           element={<HomePage />} />\r\n        <Route path='/tourist'    element={<TouristPage />} />\r\n        <Route path='/shop'       element={<ShopPage />} />\r\n        <Route path='/government' element={<GovernmentPage />} /> \r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\n\r\nimport NavBar from \"./components/Navbar/Navbar\";\r\nimport Route from \"./routes\";\r\n\r\nfunction App() {\r\n    return (\r\n        <ChakraProvider theme={theme}>\r\n            <RecoilRoot>\r\n                <BrowserRouter>\r\n                    <NavBar />\r\n                    <Route />\r\n                </BrowserRouter>\r\n            </RecoilRoot>\r\n        </ChakraProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ColorModeScript } from \"@chakra-ui/react\";\r\n\r\nimport App from \"./App\";\r\nimport theme from \"./theme\";\r\nimport { DAppProvider } from \"@usedapp/core\";\r\nimport { config } from \"./config\";\r\n\r\nimport { DataProvider } from './components/DataContext/DataContext';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n        <DAppProvider config={config}>\r\n            <DataProvider>\r\n                <App />\r\n            </DataProvider>\r\n        </DAppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}