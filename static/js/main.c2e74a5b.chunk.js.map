{"version":3,"sources":["theme.js","config.js","components/Connector/Connector.js","components/Navbar/Navbar.js","pages/Home/Home.js","components/OrderTable/OrderTable.js","assets/sample-qr.jpg","pages/User/User.js","pages/Admin/Admin.js","routes.js","App.js","index.js"],"names":["theme","extendTheme","config","initialColorMode","useSystemColorMode","readOnlyChainId","ChainId","Rinkeby","supportedChains","BSCTestnet","Connector","useEthers","activateBrowserWallet","account","disabled","colorScheme","leftIcon","icon","faWallet","onClick","NavBar","h","p","base","lg","my","align","alignContent","ml","spacing","pr","display","md","to","HomePage","minWidth","bg","OrderTable","props","classes","makeStyles","root","fontSize","className","title","data","columns","options","search","paging","filtering","exportButton","pageSize","pageSizeOptions","headerStyle","backgroundColor","color","padding","rowStyle","UserPage","useState","refundAmount","testOrderData","country","shop_name","total","vat","testOrderColumns","field","type","maxW","w","borderRadius","as","paddingTop","paddingBottom","boxSize","src","QRCode","alt","AdminPage","AppRouter","exact","path","element","Home","User","Admin","App","DAppProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2e74a5b.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\nconst theme = extendTheme({ config })\nexport default theme","import { ChainId } from '@usedapp/core'\n\nexport const config = { \n    readOnlyChainId: ChainId.Rinkeby, \n    // readOnlyUrls: { \n    //     [ChainId.Rinkeby]: \n    // },\n    supportedChains : [ ChainId.Rinkeby, ChainId.BSCTestnet ], \n}","import React from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { faWallet } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useEthers } from '@usedapp/core'\n\n\nfunction Connector(){ \n    const { activateBrowserWallet, account } = useEthers()\n\n    if (!account)\n        return ( \n        <Button \n            onClick={()=>activateBrowserWallet()}\n            colorScheme='blue'\n            leftIcon={<FontAwesomeIcon icon={faWallet}/>}\n        > \n            Connect to Wallet\n        </Button>\n        );\n    else\n        return ( \n            <Button \n            disabled\n            colorScheme='blue'\n            leftIcon={<FontAwesomeIcon icon={faWallet}/>}\n        > \n            { account }\n        </Button>\n        );\n}\n\nexport default Connector;","import React from \"react\";\nimport { Flex, Box, Heading, Spacer, HStack } from \"@chakra-ui/react\";\n\nimport Connector from \"../Connector/Connector\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar(){ \n    \n    return ( \n        <Flex h='64px' p={{base:'2', lg:'5'}} my='1rem' align='center' alignContent='space-between'> \n        <Box ml='5'>\n            <Heading>TBA</Heading>\n        </Box>\n        <Spacer />\n        <HStack p='4'>\n            <HStack spacing='2rem' pr='2rem' display={{base:'none', md:'inline'}}>\n                <Link to='/user'> User </Link>\n                <Link to='/admin'>Admin </Link>\n                <Link to='/shop'> Shop </Link>\n            </HStack>\n            <Connector />\n        </HStack>\n        </Flex>\n    ); \n}\n\nexport default NavBar;","import React from 'react';\nimport { Container } from \"@chakra-ui/react\";\n\nfunction HomePage() {\n  return (\n    <Container minWidth={{base:'100vw', lg:'80vw'}} h='calc(100vh - 64px - 3rem)' bg='gray'>\n        to be implemented\n    </Container> \n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction OrderTable(props) {\n    const classes = makeStyles({\n      root: {\n        fontSize: 16,\n      },\n    });\n  \n    return (\n        <MaterialTable\n            className = {classes.root}\n            title = {props.title}\n            data = {props.data}\n            columns = {props.columns}\n            options = {{ \n                search: false, \n                paging: true, \n                filtering: false, \n                exportButton: false,\n                pageSize: 8,\n                pageSizeOptions: [8, 16, 24],\n                headerStyle: { backgroundColor: '#90cdf4', color: '#1a202c', fontSize: 16, padding: \"16px 16px\" },\n                rowStyle: { fontSize: 14 }\n            }}\n        />\n    );\n  }\n  \n  export default OrderTable;","export default __webpack_public_path__ + \"static/media/sample-qr.fb7facfe.jpg\";","import React, { useState } from 'react';\nimport { Container, Flex, Spacer, Box, Center, Text, Image, Button } from \"@chakra-ui/react\";\nimport OrderTable from '../../components/OrderTable/OrderTable';\nimport QRCode from '../../assets/sample-qr.jpg';\n\nfunction UserPage() {\n  const [refundAmount, setRefundAmount] = useState(0.25);\n\n  const testOrderData = [\n    { country: \"THA\", shop_name: \"Ari Shop\", total: 24.23, vat: 1.70 },\n    { country: \"THA\", shop_name: \"Garrett\", total: 49.10, vat: 3.44 },\n    { country: \"THA\", shop_name: \"KFC\", total: 18.43, vat: 1.29 },\n    { country: \"USA\", shop_name: \"Walmart\", total: 25.15, vat: 1.76 },\n    { country: \"USA\", shop_name: \"Amazon\", total: 19.09, vat: 1.34 },\n    { country: \"USA\", shop_name: \"Apple\", total: 12.43, vat: 0.87 },\n  ];\n\n  const testOrderColumns = [\n    { title: \"Country\", field: \"country\", },\n    { title: \"Shop\", field: \"shop_name\", },\n    { title: \"Total\", field: \"total\", type: 'numeric', },\n    { title: \"VAT\", field: \"vat\", type: 'numeric', },\n  ];\n\n  return (\n    <Container maxW=\"1300px\" h='calc(100vh - 64px - 3rem)'>\n        <Flex>\n          <Box w=\"480px\" p=\"4\">\n            <OrderTable\n              title=\"Non-Refundable Order\"\n              data={testOrderData}\n              columns={testOrderColumns}\n            />\n          </Box>\n          <Spacer />\n          <Box w=\"480px\" p=\"4\">\n            <OrderTable\n              title=\"Refundable Order\"\n              data={testOrderData}\n              columns={testOrderColumns}\n            />\n            <br />\n            <Center>\n              <Spacer />\n              <Box bg=\"salmon\" p=\"4\" borderRadius=\"10px\" >\n                <Text fontSize=\"16px\" align=\"center\">Total Refundable Amount</Text>\n                <Text fontSize=\"26px\" as=\"b\" align=\"center\">{refundAmount} ETH</Text>\n              </Box>\n              <Spacer />\n              <Button colorScheme=\"blue\">Request Refund</Button>\n              <Spacer />\n            </Center>\n          </Box>\n          <Spacer />\n          <Box w=\"280px\">\n            <Center>\n              <Text fontSize=\"24px\" as=\"b\" paddingTop=\"27px\" paddingBottom=\"18px\">Your QR Code</Text>\n            </Center>\n            <Center>\n              <Image boxSize=\"220px\" borderRadius=\"5%\" src={QRCode} alt=\"qrcode\" />\n            </Center>\n          </Box>\n        </Flex>\n    </Container> \n  );\n}\n\nexport default UserPage;\n","import React from 'react';\nimport { Container } from \"@chakra-ui/react\";\n\nfunction AdminPage() {\n  return (\n    <Container minWidth={{base:'100vw', lg:'80vw'}} h='calc(100vh - 64px - 3rem)' bg='whitesmoke'>\n        to be implemented\n    </Container> \n  );\n}\n\nexport default AdminPage;\n","import React from 'react';\nimport {\n    Routes,\n    Route,\n  } from \"react-router-dom\";\n\nimport HomePage from './pages/Home/Home';\nimport UserPage from './pages/User/User';\nimport AdminPage from './pages/Admin/Admin';\n\nfunction AppRouter() {\n  return (\n    <Routes>\n        <Route exact path='/'       element={<HomePage />}  />\n        <Route exact path='/user'   element={<UserPage />}  />\n        <Route exact path='/admin'  element={<AdminPage />} /> \n        <Route exact path='/shop'   element={'shop Path'}   />\n    </Routes>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { DAppProvider } from '@usedapp/core';\nimport theme from \"./theme\";\nimport {config} from './config'\n\nimport NavBar from \"./components/Navbar/Navbar\";\nimport Route from \"./routes\"\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>      \n      <DAppProvider config={config}>\n        <RecoilRoot>\n        <BrowserRouter>\n          <NavBar />\n          <Route />\n        </BrowserRouter>\n        </RecoilRoot>\n      </DAppProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ColorModeScript } from \"@chakra-ui/react\"\n\nimport App from './App';\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}